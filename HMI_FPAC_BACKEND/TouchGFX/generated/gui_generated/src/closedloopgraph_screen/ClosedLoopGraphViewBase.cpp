/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/closedloopgraph_screen/ClosedLoopGraphViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ClosedLoopGraphViewBase::ClosedLoopGraphViewBase() :
    buttonCallback(this, &ClosedLoopGraphViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxBackground.setPosition(0, 0, 800, 480);
    boxBackground.setColor(touchgfx::Color::getColorFromRGB(214, 236, 255));
    add(boxBackground);

    spOpFb1.setXY(590, 381);
    add(spOpFb1);

    boxWithBorder1.setPosition(10, 375, 431, 101);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    buttonWithLabel_start.setXY(132, 387);
    buttonWithLabel_start.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_ACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_PRESSED_ID));
    buttonWithLabel_start.setLabelText(touchgfx::TypedText(T___SINGLEUSE_V6NC));
    buttonWithLabel_start.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_start.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_start.setAction(buttonCallback);
    add(buttonWithLabel_start);

    digitalInputIndicator1.setXY(20, 428);
    add(digitalInputIndicator1);

    graphBackgroud.setPosition(0, 6, 790, 380);
    graphBackgroud.setScale(1000);
    graphBackgroud.setGraphRangeX(0, 600);
    graphBackgroud.setGraphAreaMargin(17, 40, 0, 29);
    graphBackgroud.setGraphAreaPadding(0, 0, 10, 0);
    graphBackgroud.setGraphRangeY(-1.0f, 11.3f);
    graphBackgroudMajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graphBackgroudMajorXAxisGrid.setInterval(250);
    graphBackgroudMajorXAxisGrid.setLineWidth(1);
    graphBackgroudMajorXAxisGrid.setAlpha(64);
    graphBackgroudMajorXAxisGrid.setScale(1000);
    graphBackgroud.addGraphElement(graphBackgroudMajorXAxisGrid);

    graphBackgroudMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graphBackgroudMajorYAxisGrid.setInterval(1);
    graphBackgroudMajorYAxisGrid.setLineWidth(1);
    graphBackgroudMajorYAxisGrid.setAlpha(104);
    graphBackgroudMajorYAxisGrid.setScale(1000);
    graphBackgroud.addGraphElement(graphBackgroudMajorYAxisGrid);

    graphBackgroudMajorXAxisLabel.setInterval(50);
    graphBackgroudMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_8LM6));
    graphBackgroudMajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(74, 74, 74));
    graphBackgroudMajorXAxisLabel.setScale(1000);
    graphBackgroud.addBottomElement(graphBackgroudMajorXAxisLabel);

    graphBackgroudMajorYAxisLabel.setInterval(1);
    graphBackgroudMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_WL29));
    graphBackgroudMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(74, 74, 74));
    graphBackgroudMajorYAxisLabel.setScale(1000);
    graphBackgroud.addLeftElement(graphBackgroudMajorYAxisLabel);


    add(graphBackgroud);

    graphFeadback.setPosition(0, 6, 780, 380);
    graphFeadback.setScale(1000);
    graphFeadback.setGraphRangeX(0, 1200);
    graphFeadback.setGraphAreaMargin(17, 40, 0, 29);
    graphFeadback.setGraphAreaPadding(0, 0, 10, 0);
    graphFeadback.setGraphRangeY(-1.0f, 11.3f);
    graphFeadback.setVisible(false);
    graphFeadbackLine1Painter.setColor(touchgfx::Color::getColorFromRGB(188, 0, 201));
    graphFeadbackLine1.setPainter(graphFeadbackLine1Painter);
    graphFeadbackLine1.setLineWidth(1);
    graphFeadback.addGraphElement(graphFeadbackLine1);

    add(graphFeadback);

    graphSetpoint.setPosition(0, 6, 780, 380);
    graphSetpoint.setScale(1000);
    graphSetpoint.setGraphRangeX(0, 1200);
    graphSetpoint.setGraphAreaMargin(17, 40, 0, 29);
    graphSetpoint.setGraphAreaPadding(0, 0, 10, 0);
    graphSetpoint.setGraphRangeY(-1.0f, 11.3f);
    graphSetpoint.setVisible(false);
    graphSetpointLine1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    graphSetpointLine1.setPainter(graphSetpointLine1Painter);
    graphSetpointLine1.setLineWidth(1);
    graphSetpoint.addGraphElement(graphSetpointLine1);

    add(graphSetpoint);

    graphOutput.setPosition(0, -6, 780, 101);
    graphOutput.setScale(1000);
    graphOutput.setGraphRangeX(0, 1200);
    graphOutput.setGraphAreaMargin(17, 40, 0, 29);
    graphOutput.setGraphAreaPadding(0, 0, 10, 0);
    graphOutput.setGraphRangeY(-1.0f, 11.3f);
    graphOutputMajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(51, 22, 196));
    graphOutputMajorXAxisGrid.setInterval(60);
    graphOutputMajorXAxisGrid.setLineWidth(2);
    graphOutputMajorXAxisGrid.setScale(1000);
    graphOutput.addGraphElement(graphOutputMajorXAxisGrid);

    graphOutputMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    graphOutputMajorYAxisGrid.setInterval(5);
    graphOutputMajorYAxisGrid.setLineWidth(1);
    graphOutputMajorYAxisGrid.setScale(1000);
    graphOutput.addGraphElement(graphOutputMajorYAxisGrid);

    graphOutputLine1Painter.setColor(touchgfx::Color::getColorFromRGB(140, 3, 3));
    graphOutputLine1.setPainter(graphOutputLine1Painter);
    graphOutputLine1.setLineWidth(2);
    graphOutput.addGraphElement(graphOutputLine1);

    add(graphOutput);

    buttonWithLabel_stop.setXY(283, 386);
    buttonWithLabel_stop.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_PRESSED_ID));
    buttonWithLabel_stop.setLabelText(touchgfx::TypedText(T___SINGLEUSE_2CQX));
    buttonWithLabel_stop.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_stop.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_stop.setAction(buttonCallback);
    add(buttonWithLabel_stop);

    buttonWithLabel_clear.setXY(283, 430);
    buttonWithLabel_clear.setBitmaps(touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_PRESSED_ID));
    buttonWithLabel_clear.setLabelText(touchgfx::TypedText(T___SINGLEUSE_AZT2));
    buttonWithLabel_clear.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_clear.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_clear.setAction(buttonCallback);
    add(buttonWithLabel_clear);

    buttonWithLabel_set.setXY(20, 387);
    buttonWithLabel_set.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    buttonWithLabel_set.setLabelText(touchgfx::TypedText(T___SINGLEUSE_6CM6));
    buttonWithLabel_set.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_set.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_set.setAction(buttonCallback);
    add(buttonWithLabel_set);

    boxWithBorder2.setPosition(455, 381, 116, 76);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder2.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2.setBorderSize(5);
    add(boxWithBorder2);

    text_analogVal_Kp.setXY(464, 384);
    text_analogVal_Kp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    text_analogVal_Kp.setLinespacing(0);
    Unicode::snprintf(text_analogVal_KpBuffer, TEXT_ANALOGVAL_KP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z6EL).getText());
    text_analogVal_Kp.setWildcard(text_analogVal_KpBuffer);
    text_analogVal_Kp.resizeToCurrentText();
    text_analogVal_Kp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_21S9));
    add(text_analogVal_Kp);

    text_analogVal_Ki.setXY(464, 405);
    text_analogVal_Ki.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    text_analogVal_Ki.setLinespacing(0);
    Unicode::snprintf(text_analogVal_KiBuffer, TEXT_ANALOGVAL_KI_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NIL7).getText());
    text_analogVal_Ki.setWildcard(text_analogVal_KiBuffer);
    text_analogVal_Ki.resizeToCurrentText();
    text_analogVal_Ki.setTypedText(touchgfx::TypedText(T___SINGLEUSE_66OT));
    add(text_analogVal_Ki);

    text_analogVal_Kd.setXY(466, 425);
    text_analogVal_Kd.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    text_analogVal_Kd.setLinespacing(0);
    Unicode::snprintf(text_analogVal_KdBuffer, TEXT_ANALOGVAL_KD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ABRK).getText());
    text_analogVal_Kd.setWildcard(text_analogVal_KdBuffer);
    text_analogVal_Kd.resizeToCurrentText();
    text_analogVal_Kd.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5HQL));
    add(text_analogVal_Kd);

    binaryMenu.setXY(-87, 340);
    binaryMenu.setup(touchgfx::SlideMenu::NORTH,
        touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BARS_1024X600_BOTTOM_DIM_DARK_ID),
        touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
        touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID),
        601, 43, 730, 0);
    binaryMenu.setState(touchgfx::SlideMenu::COLLAPSED);
    binaryMenu.setVisiblePixelsWhenCollapsed(39);
    binaryMenu.setHiddenPixelsWhenExpanded(0);
    binaryMenu.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    binaryMenu.setAnimationDuration(18);
    binaryMenu.setExpandedStateTimeout(0);
    boxWithBorder6.setPosition(601, 44, 288, 94);
    boxWithBorder6.setColor(touchgfx::Color::getColorFromRGB(105, 119, 144));
    boxWithBorder6.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder6.setBorderSize(5);
    binaryMenu.add(boxWithBorder6);

    binaryButton.setPosition(391, 38, 495, 126);
    buttonDigital3.setXY(226, 15);
    buttonDigital3.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_ID), touchgfx::Bitmap(BITMAP_ON_ID));
    buttonDigital3.setAction(buttonCallback);
    binaryButton.add(buttonDigital3);

    buttonDigital2.setXY(295, 15);
    buttonDigital2.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_ID), touchgfx::Bitmap(BITMAP_ON_ID));
    buttonDigital2.setAction(buttonCallback);
    binaryButton.add(buttonDigital2);

    buttonDigital1.setXY(369, 15);
    buttonDigital1.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_ID), touchgfx::Bitmap(BITMAP_ON_ID));
    buttonDigital1.setAction(buttonCallback);
    binaryButton.add(buttonDigital1);

    buttonDigital0.setXY(443, 15);
    buttonDigital0.setBitmaps(touchgfx::Bitmap(BITMAP_OFF_ID), touchgfx::Bitmap(BITMAP_ON_ID));
    buttonDigital0.setAction(buttonCallback);
    binaryButton.add(buttonDigital0);

    textArea4.setXY(454, 45);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(34, 42, 56));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6VYA));
    binaryButton.add(textArea4);

    textArea4_2.setXY(306, 46);
    textArea4_2.setColor(touchgfx::Color::getColorFromRGB(34, 42, 56));
    textArea4_2.setLinespacing(0);
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GD5M));
    binaryButton.add(textArea4_2);

    textArea4_2_1.setXY(237, 46);
    textArea4_2_1.setColor(touchgfx::Color::getColorFromRGB(34, 42, 56));
    textArea4_2_1.setLinespacing(0);
    textArea4_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FOWU));
    binaryButton.add(textArea4_2_1);

    textArea4_1.setXY(379, 46);
    textArea4_1.setColor(touchgfx::Color::getColorFromRGB(34, 42, 56));
    textArea4_1.setLinespacing(0);
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RSAD));
    binaryButton.add(textArea4_1);

    binaryMenu.add(binaryButton);

    image1_1.setXY(85, 57);
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_EFFECTS_800X480_SHADE_TOP_DARK_ID));
    binaryMenu.add(image1_1);

    add(binaryMenu);

    buttonDone.setXY(690, -23);
    buttonDone.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_FILE_DOWNLOAD_DONE_50_50_5777F3_SVG_ID));
    buttonDone.setIconXY(39, 33);
    buttonDone.setAction(buttonCallback);
    add(buttonDone);

    textArea5.setXY(727, 340);
    textArea5.setColor(touchgfx::Color::getColorFromRGB(74, 74, 74));
    textArea5.setLinespacing(0);
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q350));
    add(textArea5);

    buttonXZoomIn.setXY(678, 292);
    buttonXZoomIn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_ZOOM_IN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    buttonXZoomIn.setIconXY(-7, -7);
    buttonXZoomIn.setAction(buttonCallback);
    add(buttonXZoomIn);

    buttonBackward.setXY(81, 292);
    buttonBackward.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    buttonBackward.setIconXY(-7, -7);
    buttonBackward.setAction(buttonCallback);
    add(buttonBackward);

    buttonXZoomOut.setXY(736, 292);
    buttonXZoomOut.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_ZOOM_OUT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    buttonXZoomOut.setIconXY(-7, -7);
    buttonXZoomOut.setAction(buttonCallback);
    add(buttonXZoomOut);

    buttonForward.setXY(141, 292);
    buttonForward.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    buttonForward.setIconXY(-7, -7);
    buttonForward.setAction(buttonCallback);
    add(buttonForward);
}

ClosedLoopGraphViewBase::~ClosedLoopGraphViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void ClosedLoopGraphViewBase::setupScreen()
{
    spOpFb1.initialize();
    digitalInputIndicator1.initialize();
}

void ClosedLoopGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_set)
    {
        //setButtonHandle
        //When buttonWithLabel_set clicked change screen to ClosedLoopSetting
        //Go to ClosedLoopSetting with no screen transition
        application().gotoClosedLoopSettingScreenNoTransition();
    
        //a
        //When setButtonHandle completed call virtual function
        //Call setButtonHandle
        setButtonHandle();
    }
    if (&src == &buttonWithLabel_start)
    {
        //startButton_Handle
        //When buttonWithLabel_start clicked call virtual function
        //Call startButton_Handle
        startButton_Handle();
    }
    if (&src == &buttonWithLabel_stop)
    {
        //stopButton_Handle
        //When buttonWithLabel_stop clicked call virtual function
        //Call stopButton_Handle
        stopButton_Handle();
    }
    if (&src == &buttonWithLabel_clear)
    {
        //clearButton_Handle
        //When buttonWithLabel_clear clicked call virtual function
        //Call clearButton_Handle
        clearButton_Handle();
    }
    if (&src == &buttonDigital0)
    {
        //buttonDigital0Handle
        //When buttonDigital0 clicked call virtual function
        //Call buttonDigital0Handle
        buttonDigital0Handle();
    }
    if (&src == &buttonDigital1)
    {
        //buttonDigital1Handle
        //When buttonDigital1 clicked call virtual function
        //Call buttonDigital1Handle
        buttonDigital1Handle();
    }
    if (&src == &buttonDigital2)
    {
        //buttonDigital2Handle
        //When buttonDigital2 clicked call virtual function
        //Call buttonDigital2Handle
        buttonDigital2Handle();
    }
    if (&src == &buttonDigital3)
    {
        //buttonDigital3Handle
        //When buttonDigital3 clicked call virtual function
        //Call buttonDigital3Handle
        buttonDigital3Handle();
    }
    if (&src == &buttonDone)
    {
        //buttonDoneHandle
        //When buttonDone clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    
        //Interaction1
        //When buttonDoneHandle completed call virtual function
        //Call buttonDoneHandle
        buttonDoneHandle();
    }
    if (&src == &buttonXZoomIn)
    {
        //zoomInHandle
        //When buttonXZoomIn clicked call virtual function
        //Call zoomInXHandle
        zoomInXHandle();
    }
    if (&src == &buttonXZoomOut)
    {
        //zoomOutHandle
        //When buttonXZoomOut clicked call virtual function
        //Call zoomOutXHandle
        zoomOutXHandle();
    }
    if (&src == &buttonForward)
    {
        //buttonForwardHandle
        //When buttonForward clicked call virtual function
        //Call buttonForwardHandle
        buttonForwardHandle();
    }
    if (&src == &buttonBackward)
    {
        //buttonBackwardHandle
        //When buttonBackward clicked call virtual function
        //Call buttonBackwardHandle
        buttonBackwardHandle();
    }
}
