/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/KeyboardBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

KeyboardBase::KeyboardBase() :
    buttonCallback(this, &KeyboardBase::buttonCallbackHandler)
{
    setWidth(343);
    setHeight(426);
    boxWithBorder1.setPosition(0, 0, 343, 426);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(173, 173, 173));
    boxWithBorder1.setBorderSize(9);
    add(boxWithBorder1);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BACKGROUNDS_800X480_PUZZLE_ID));
    scalableImage1.setPosition(5, 5, 266, 417);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    box1.setPosition(266, 5, 72, 417);
    box1.setColor(touchgfx::Color::getColorFromRGB(191, 202, 224));
    add(box1);

    button1.setXY(-17, -18);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_OJY6));
    button1.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button1.setAction(buttonCallback);
    add(button1);

    button4.setXY(-17, 73);
    button4.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button4.setLabelText(touchgfx::TypedText(T___SINGLEUSE_7C6R));
    button4.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button4.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button4.setAction(buttonCallback);
    add(button4);

    button5.setXY(74, 73);
    button5.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button5.setLabelText(touchgfx::TypedText(T___SINGLEUSE_EB58));
    button5.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button5.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button5.setAction(buttonCallback);
    add(button5);

    button6.setXY(163, 73);
    button6.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button6.setLabelText(touchgfx::TypedText(T___SINGLEUSE_T5KP));
    button6.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button6.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button6.setAction(buttonCallback);
    add(button6);

    button7.setXY(-17, 164);
    button7.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button7.setLabelText(touchgfx::TypedText(T___SINGLEUSE_G9R0));
    button7.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button7.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button7.setAction(buttonCallback);
    add(button7);

    button8.setXY(74, 164);
    button8.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button8.setLabelText(touchgfx::TypedText(T___SINGLEUSE_AH5G));
    button8.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button8.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button8.setAction(buttonCallback);
    add(button8);

    button9.setXY(163, 164);
    button9.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button9.setLabelText(touchgfx::TypedText(T___SINGLEUSE_QU9P));
    button9.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button9.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button9.setAction(buttonCallback);
    add(button9);

    buttonDot.setXY(-17, 250);
    buttonDot.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    buttonDot.setLabelText(touchgfx::TypedText(T___SINGLEUSE_N6VC));
    buttonDot.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    buttonDot.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonDot.setAction(buttonCallback);
    add(buttonDot);

    button0.setXY(74, 250);
    button0.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button0.setLabelText(touchgfx::TypedText(T___SINGLEUSE_17GE));
    button0.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button0.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button0.setAction(buttonCallback);
    add(button0);

    buttonDel.setXY(163, 250);
    buttonDel.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    buttonDel.setLabelText(touchgfx::TypedText(T___SINGLEUSE_16QU));
    buttonDel.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    buttonDel.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonDel.setAction(buttonCallback);
    add(buttonDel);

    buttonEnter.setXY(6, 342);
    buttonEnter.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_PRESSED_ID));
    buttonEnter.setLabelText(touchgfx::TypedText(T___SINGLEUSE_6R6O));
    buttonEnter.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    buttonEnter.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonEnter.setAction(buttonCallback);
    add(buttonEnter);

    button2.setXY(74, -18);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button2.setLabelText(touchgfx::TypedText(T___SINGLEUSE_02Q6));
    button2.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button2.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button2.setAction(buttonCallback);
    add(button2);

    button3.setXY(163, -18);
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    button3.setLabelText(touchgfx::TypedText(T___SINGLEUSE_GTV2));
    button3.setLabelColor(touchgfx::Color::getColorFromRGB(112, 112, 112));
    button3.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button3.setAction(buttonCallback);
    add(button3);

    image1.setXY(282, 182);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_EDITOR_FORMAT_ALIGN_JUSTIFY_50_50_86898C_SVG_ID));
    add(image1);
}

KeyboardBase::~KeyboardBase()
{

}

void KeyboardBase::initialize()
{

}

void KeyboardBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked call virtual function
        //Call button1ClickHandler
        button1ClickHandler();
    }
    if (&src == &button2)
    {
        //Interaction2
        //When button2 clicked call virtual function
        //Call button2ClickHandler
        button2ClickHandler();
    }
    if (&src == &button3)
    {
        //Interaction3
        //When button3 clicked call virtual function
        //Call button3ClickHandler
        button3ClickHandler();
    }
    if (&src == &button4)
    {
        //Interaction4
        //When button4 clicked call virtual function
        //Call button4ClickHandler
        button4ClickHandler();
    }
    if (&src == &button5)
    {
        //Interaction5
        //When button5 clicked call virtual function
        //Call button5ClickHandler
        button5ClickHandler();
    }
    if (&src == &button6)
    {
        //Interaction6
        //When button6 clicked call virtual function
        //Call button6ClickHandler
        button6ClickHandler();
    }
    if (&src == &button7)
    {
        //Interaction7
        //When button7 clicked call virtual function
        //Call button7ClickHandler
        button7ClickHandler();
    }
    if (&src == &button8)
    {
        //Interaction8
        //When button8 clicked call virtual function
        //Call button8ClickHandler
        button8ClickHandler();
    }
    if (&src == &button9)
    {
        //Interaction9
        //When button9 clicked call virtual function
        //Call button9ClickHandler
        button9ClickHandler();
    }
    if (&src == &button0)
    {
        //Interaction10
        //When button0 clicked call virtual function
        //Call button0ClickHandler
        button0ClickHandler();
    }
    if (&src == &buttonDot)
    {
        //Interaction11
        //When buttonDot clicked call virtual function
        //Call buttonDotClickHandler
        buttonDotClickHandler();
    }
    if (&src == &buttonDel)
    {
        //Interaction12
        //When buttonDel clicked call virtual function
        //Call buttonDelClickHandler
        buttonDelClickHandler();
    }
    if (&src == &buttonEnter)
    {
        //Interaction13
        //When buttonEnter clicked call virtual function
        //Call buttonEnterClickHandler
        buttonEnterClickHandler();
    }
}
