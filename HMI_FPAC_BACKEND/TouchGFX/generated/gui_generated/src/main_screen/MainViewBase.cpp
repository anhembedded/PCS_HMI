/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Background.setPosition(0, 0, 800, 479);
    Background.setColor(touchgfx::Color::getColorFromRGB(214, 236, 255));
    add(Background);

    buttonSetting.setXY(450, 352);
    buttonSetting.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_SETTINGS_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_SETTINGS_50_50_5777F3_SVG_ID));
    buttonSetting.setIconXY(55, 22);
    buttonSetting.setAction(buttonCallback);
    add(buttonSetting);

    buttonMesuaring.setXY(190, 106);
    buttonMesuaring.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_PRESSED_ID));
    buttonMesuaring.setLabelText(touchgfx::TypedText(T___SINGLEUSE_JGV0));
    buttonMesuaring.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonMesuaring.setLabelColorPressed(touchgfx::Color::getColorFromRGB(87, 119, 243));
    buttonMesuaring.setAction(buttonCallback);
    add(buttonMesuaring);

    clickButton_closedloopControlContinuous.setXY(190, 165);
    clickButton_closedloopControlContinuous.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_PRESSED_ID));
    clickButton_closedloopControlContinuous.setLabelText(touchgfx::TypedText(T___SINGLEUSE_KZ50));
    clickButton_closedloopControlContinuous.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    clickButton_closedloopControlContinuous.setLabelColorPressed(touchgfx::Color::getColorFromRGB(87, 119, 243));
    clickButton_closedloopControlContinuous.setAction(buttonCallback);
    add(clickButton_closedloopControlContinuous);

    buttonLang.setXY(569, 352);
    buttonLang.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_LANGUAGE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_LANGUAGE_50_50_5777F3_SVG_ID));
    buttonLang.setIconXY(87, 22);
    add(buttonLang);

    image1.setXY(0, -1);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_EFFECTS_800X480_SHADE_RIGHT_LIGHT_ID));
    add(image1);

    button_information.setXY(30, 352);
    button_information.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_INFO_OUTLINE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_COMMUNICATION_LIVE_HELP_50_50_5777F3_SVG_ID));
    button_information.setIconXY(55, 22);
    button_information.setAction(buttonCallback);
    add(button_information);
}

MainViewBase::~MainViewBase()
{

}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonSetting)
    {
        //buttonSetting
        //When buttonSetting clicked change screen to Setting
        //Go to Setting with screen transition towards East
        application().gotoSettingScreenCoverTransitionEast();
    
        //buttonSettingHandle
        //When buttonSetting completed call virtual function
        //Call buttonSettingHandle
        buttonSettingHandle();
    }
    if (&src == &buttonMesuaring)
    {
        //buttonMesuaring
        //When buttonMesuaring clicked change screen to Mesuaring
        //Go to Mesuaring with screen transition towards East
        application().gotoMesuaringScreenCoverTransitionEast();
    }
    if (&src == &clickButton_closedloopControlContinuous)
    {
        //buttonClosedLoop
        //When clickButton_closedloopControlContinuous clicked change screen to ClosedLoopGraph
        //Go to ClosedLoopGraph with screen transition towards East
        application().gotoClosedLoopGraphScreenCoverTransitionEast();
    
        //buttonClosedLoopHandle
        //When buttonClosedLoop completed call virtual function
        //Call buttonClosedLoop
        buttonClosedLoop();
    }
    if (&src == &button_information)
    {
        //buttonInfor
        //When button_information clicked change screen to Information
        //Go to Information with block transition
        application().gotoInformationScreenBlockTransition();
    }
}
