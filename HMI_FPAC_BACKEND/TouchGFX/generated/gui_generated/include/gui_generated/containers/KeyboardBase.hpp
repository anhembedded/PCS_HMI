/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KEYBOARDBASE_HPP
#define KEYBOARDBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class KeyboardBase : public touchgfx::Container
{
public:
    KeyboardBase();
    virtual ~KeyboardBase();
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void button1ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button2ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button3ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button4ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button5ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button6ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button7ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button8ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button9ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void button0ClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void buttonDotClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void buttonDelClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void buttonEnterClickHandler()
    {
        // Override and implement this function in Keyboard
    }
    virtual void buttonSubClickHandler()
    {
        // Override and implement this function in Keyboard
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Box box1;
    touchgfx::ButtonWithLabel buttonEnter;
    touchgfx::ButtonWithLabel buttonDel;
    touchgfx::ButtonWithLabel buttonSub;
    touchgfx::ButtonWithLabel button4;
    touchgfx::ButtonWithLabel button5;
    touchgfx::ButtonWithLabel button6;
    touchgfx::ButtonWithLabel button7;
    touchgfx::ButtonWithLabel button8;
    touchgfx::ButtonWithLabel button9;
    touchgfx::ButtonWithLabel buttonDot;
    touchgfx::ButtonWithLabel button0;
    touchgfx::ButtonWithLabel button3;
    touchgfx::ButtonWithLabel button2;
    touchgfx::ButtonWithLabel button1;
    touchgfx::Image image1;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::TextAreaWithOneWildcard textArea_buffer;
    touchgfx::TextArea textArea1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_BUFFER_SIZE = 13;
    touchgfx::Unicode::UnicodeChar textArea_bufferBuffer[TEXTAREA_BUFFER_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<KeyboardBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // KEYBOARDBASE_HPP
