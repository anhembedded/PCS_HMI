/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DEVVIEWBASE_HPP
#define DEVVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dev_screen/DevPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>

class DevViewBase : public touchgfx::View<DevPresenter>
{
public:
    DevViewBase();
    virtual ~DevViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void radioSineFuntionHandle()
    {
        // Override and implement this function in Dev
    }
    virtual void radioIncrieaseFuntionHandle()
    {
        // Override and implement this function in Dev
    }
    virtual void radioAcceleratedFuntionHandle()
    {
        // Override and implement this function in Dev
    }
    virtual void buttonOnOffHandle()
    {
        // Override and implement this function in Dev
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box boxBackground;
    touchgfx::TextArea textArea1_1_1;
    touchgfx::GraphWrapAndClear<600> graphBackgroud;
    touchgfx::GraphElementGridX graphBackgroudMajorXAxisGrid;
    touchgfx::GraphElementGridY graphBackgroudMajorYAxisGrid;
    touchgfx::GraphLabelsX graphBackgroudMajorXAxisLabel;
    touchgfx::GraphLabelsY graphBackgroudMajorYAxisLabel;
    touchgfx::GraphWrapAndClear<600> graphA;
    touchgfx::GraphElementLine graphALine1;
    touchgfx::PainterRGB565 graphALine1Painter;
    touchgfx::GraphWrapAndClear<600> graphV;
    touchgfx::GraphElementLine graphVLine1;
    touchgfx::PainterRGB565 graphVLine1Painter;
    touchgfx::GraphWrapAndClear<600> graphS;
    touchgfx::GraphElementLine graphSLine1;
    touchgfx::PainterRGB565 graphSLine1Painter;
    touchgfx::ToggleButton buttonOnOff;
    touchgfx::RadioButtonGroup<3> radioButtonGroup1;
    touchgfx::RadioButton radioSineFunction;
    touchgfx::RadioButton radioIncrease;
    touchgfx::RadioButton radioAccelerated;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea1_1;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextArea textArea2_1_1;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DevViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;
    touchgfx::Callback<DevViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DEVVIEWBASE_HPP
