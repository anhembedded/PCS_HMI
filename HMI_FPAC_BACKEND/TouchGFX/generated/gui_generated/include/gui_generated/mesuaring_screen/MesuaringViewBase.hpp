/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MESUARINGVIEWBASE_HPP
#define MESUARINGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mesuaring_screen/MesuaringPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <gui/containers/Keyboard.hpp>
#include <gui/containers/ButtonDone.hpp>
#include <gui/containers/GraphInf.hpp>

class MesuaringViewBase : public touchgfx::View<MesuaringPresenter>
{
public:
    MesuaringViewBase();
    virtual ~MesuaringViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void graphCH0Click(AbstractDataGraph::GraphClickEvent value)
    {
        // Override and implement this function in Mesuaring
    }
    virtual void graphCH0Dragged(AbstractDataGraph::GraphDragEvent value)
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonGraphIn0Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonGraphIn1Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonGraphIn2Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonGraphIn3Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonGraphOut0Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonGraphOut1Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonGraphOutHandle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonClearGraphHandle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonDigiOut1Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonDigiOut2Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonDigiOut3Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonAnalogOut1Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonAnalogOut2Handle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void buttonSetTimeHandle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void graphLineMenuHandle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void graphLineControlPanelHandle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void graphLineControlPanelAEHandle()
    {
        // Override and implement this function in Mesuaring
    }
    virtual void sliderGraphLineAEHandle()
    {
        // Override and implement this function in Mesuaring
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box Background;
    touchgfx::Container containerGraph;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::GraphWrapAndClear<600> graphOut;
    touchgfx::GraphElementLine graphOutLine1;
    touchgfx::PainterRGB565 graphOutLine1Painter;
    touchgfx::GraphWrapAndClear<600> graphOut1;
    touchgfx::GraphElementLine graphOut1Line1;
    touchgfx::PainterRGB565 graphOut1Line1Painter;
    touchgfx::GraphWrapAndClear<600> graphCH1;
    touchgfx::GraphElementLine graphCH1Line1;
    touchgfx::PainterRGB565 graphCH1Line1Painter;
    touchgfx::GraphWrapAndClear<600> graphCH3;
    touchgfx::GraphElementLine graphCH3Line1;
    touchgfx::PainterRGB565 graphCH3Line1Painter;
    touchgfx::GraphWrapAndClear<600> graphCH2;
    touchgfx::GraphElementLine graphCH2Line1;
    touchgfx::PainterRGB565 graphCH2Line1Painter;
    touchgfx::GraphWrapAndClear<600> graphCH0;
    touchgfx::GraphElementLine graphCH0Line1;
    touchgfx::PainterRGB565 graphCH0Line1Painter;
    touchgfx::GraphWrapAndClear<600> graphBackgroud;
    touchgfx::GraphElementGridX graphBackgroudMajorXAxisGrid;
    touchgfx::GraphElementGridY graphBackgroudMajorYAxisGrid;
    touchgfx::GraphLabelsX graphBackgroudMajorXAxisLabel;
    touchgfx::GraphLabelsY graphBackgroudMajorYAxisLabel;
    touchgfx::GraphWrapAndClear<600> graphOut0;
    touchgfx::GraphElementLine graphOut0Line1;
    touchgfx::PainterRGB565 graphOut0Line1Painter;
    touchgfx::SlideMenu graphLine;
    touchgfx::ToggleButton butonGraphIn0;
    touchgfx::ToggleButton butonGraphIn3;
    touchgfx::ToggleButton butonGraphOut0;
    touchgfx::ToggleButton butonGraphOut1;
    touchgfx::ToggleButton butonGraphOut;
    touchgfx::ToggleButton butonGraphIn2;
    touchgfx::ToggleButton butonGraphIn1;
    touchgfx::TextArea textArea5;
    touchgfx::TextArea textArea5_1;
    touchgfx::TextArea textArea5_1_1;
    touchgfx::TextArea textArea5_1_1_1;
    touchgfx::TextArea textArea5_1_1_1_1;
    touchgfx::TextArea textArea5_1_1_1_1_1;
    touchgfx::TextArea textArea5_1_1_1_1_1_1;
    touchgfx::SlideMenu binaryMenu;
    touchgfx::Container binaryButton;
    touchgfx::ToggleButton toggleButtonDigitalOut3;
    touchgfx::ToggleButton toggleButtonDigitalOut3_1;
    touchgfx::ToggleButton toggleButtonDigitalOut3_1_1;
    touchgfx::ToggleButton toggleButtonDigitalOut3_1_1_1;
    touchgfx::ToggleButton toggleButtonDigitalOut3_1_1_1_1;
    touchgfx::ToggleButton toggleButtonDigitalOut3_1_1_1_1_1;
    touchgfx::ToggleButton toggleButtonDigitalOut3_1_1_1_1_1_1;
    touchgfx::ToggleButton buttonDigital0;
    touchgfx::TextArea textArea4;
    touchgfx::TextArea textArea4_2;
    touchgfx::TextArea textArea4_2_1;
    touchgfx::TextArea textArea4_2_1_1;
    touchgfx::TextArea textArea4_2_1_1_1;
    touchgfx::TextArea textArea4_2_1_1_1_1;
    touchgfx::TextArea textArea4_2_1_1_1_1_1;
    touchgfx::TextArea textArea4_1;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::TextAreaWithOneWildcard textBinay;
    touchgfx::Image image1_1;
    touchgfx::SlideMenu controlPanel;
    touchgfx::TextArea textArea5_1_1_1_2;
    touchgfx::Button buttonClearGraph;
    touchgfx::ToggleButton onOffOutput;
    touchgfx::TextArea textArea6_1;
    touchgfx::ToggleButton buttonStartRecord;
    touchgfx::TextArea textArea6;
    touchgfx::TextArea textArea6_2;
    touchgfx::TextArea textArea6_2_1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  buttonSetTime;
    touchgfx::TextAreaWithOneWildcard textSetTime;
    touchgfx::Container SelectManinValue;
    touchgfx::BoxWithBorder boxWithBorder3;
    touchgfx::ToggleButton buttonDigiOut1;
    touchgfx::ToggleButton buttonDigiOut2;
    touchgfx::ToggleButton buttonDigiOut3;
    touchgfx::ToggleButton buttonAnalogOut1;
    touchgfx::ToggleButton buttonAnalogOut2;
    touchgfx::ToggleButton buttonDigiOut3_1;
    touchgfx::ToggleButton buttonDigiOut3_1_1;
    touchgfx::TextArea textArea5_2_1;
    touchgfx::TextArea textArea5_2_2;
    touchgfx::TextArea textArea5_2_2_1;
    touchgfx::TextArea textArea5_2_2_1_1;
    touchgfx::TextArea textArea5_2_3;
    touchgfx::TextArea textArea5_2;
    touchgfx::TextArea textArea5_2_4;
    touchgfx::TextArea textArea5_1_1_1_2_1;
    touchgfx::TextAreaWithOneWildcard textAreaAnalogOut;
    touchgfx::Slider sliderAnalogOut;
    touchgfx::Slider sliderPWM;
    touchgfx::TextAreaWithOneWildcard textAreaAnalogOut_1;
    Keyboard keyboard1;
    ButtonDone buttonDone1;
    GraphInf graphInf1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTSETTIME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textSetTimeBuffer[TEXTSETTIME_SIZE];
    static const uint16_t TEXTAREAANALOGOUT_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textAreaAnalogOutBuffer[TEXTAREAANALOGOUT_SIZE];
    static const uint16_t TEXTAREAANALOGOUT_1_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textAreaAnalogOut_1Buffer[TEXTAREAANALOGOUT_1_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MesuaringViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphClickEvent&> graphClickedCallback;
    touchgfx::Callback<MesuaringViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphDragEvent&> graphDraggedCallback;
    touchgfx::Callback<MesuaringViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MesuaringViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<MesuaringViewBase, const touchgfx::SlideMenu&> slideMenuStateChangedCallback;
    touchgfx::Callback<MesuaringViewBase, const touchgfx::SlideMenu&> slideMenuAnimationEndedCallback;

    /*
     * Callback Handler Declarations
     */
    void graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value);
    void graphDraggedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphDragEvent& value);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void slideMenuStateChangedCallbackHandler(const touchgfx::SlideMenu& src);
    void slideMenuAnimationEndedCallbackHandler(const touchgfx::SlideMenu& src);

};

#endif // MESUARINGVIEWBASE_HPP
